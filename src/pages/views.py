from django.http import HttpResponse
from django.contrib.auth.decorators import login_required
from django.shortcuts import render, redirect
from django.contrib.auth.models import User
from django.shortcuts import render
from .models import Message, Mail
from django.db.models import Q
from django.views.decorators.csrf import csrf_exempt
from django.db import connection
# Create your views here.
@login_required
def homePageView(request):
    return render(request, 'pages/index.html', )

@login_required
def messageView(request):
    messages = Message.objects.filter(Q(source=request.user) | Q(target=request.user))
    users = User.objects.exclude(pk=request.user.id)    
    return render(request, 'pages/messages.html', {'msgs': messages, 'users': users})

@login_required
def confirmView(request):
	request.session['to'] = request.GET.get('to')
	request.session['amount'] = int(request.GET.get('amount'))

	amount = request.session['amount']
	to = User.objects.get(username=request.session['to'])
	
	request.user.account.balance -= amount
	to.account.balance += amount

	request.user.account.save()
	to.account.save()
	
	return redirect('/')

@login_required
def transferView(request):
	users = User.objects.exclude(pk=request.user.id)    
	return render(request, 'pages/transfer.html', {'users': users})

@csrf_exempt 
def mailView(request):
	Mail.objects.create(content=request.body.decode('utf-8'))
	print(request.body.decode('utf-8'))
	return HttpResponse('')

@login_required
def addView(request):
	target = User.objects.get(username=request.POST.get('to'))
	Message.objects.create(source=request.user, target=target, content=request.POST.get('content'))
	return redirect('/')

@login_required
def searchView(request):
	if request.user.is_superuser:
		return render(request, 'pages/results.html')
	else:
		return redirect('/')

@login_required
def resultsView(request):
	username = request.GET['q']
	cursor = connection.cursor()
	cursor.execute("SELECT username FROM auth_user WHERE username LIKE '%s';" % username)
	results = cursor.fetchall()
	print(results)
	return render(request, 'pages/results.html', {'results': results})